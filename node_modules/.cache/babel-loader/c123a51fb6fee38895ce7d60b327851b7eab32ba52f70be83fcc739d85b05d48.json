{"ast":null,"code":"var _jsxFileName = \"/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/barchart.jsx\",\n  _this = this;\nimport { ResponsiveBar } from '@nivo/bar';\nimport { datas as info } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Barchart = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : info;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResponsiveBar, {\n      data: data,\n      keys: ['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut'],\n      indexBy: \"country\",\n      margin: {\n        top: 50,\n        right: 200,\n        bottom: 50,\n        left: 60\n      },\n      padding: 0.55,\n      groupMode: \"grouped\",\n      valueScale: {\n        type: 'linear'\n      },\n      indexScale: {\n        type: 'band',\n        round: true\n      },\n      valueFormat: \" >-\",\n      colors: {\n        scheme: 'nivo'\n      },\n      defs: [{\n        id: 'dots',\n        type: 'patternDots',\n        background: 'inherit',\n        color: '#38bcb2',\n        size: 4,\n        padding: 1,\n        stagger: true\n      }, {\n        id: 'lines',\n        type: 'patternLines',\n        background: 'inherit',\n        color: '#eed312',\n        rotation: -45,\n        lineWidth: 6,\n        spacing: 10\n      }],\n      fill: [{\n        match: {\n          id: 'fries'\n        },\n        id: 'dots'\n      }, {\n        match: {\n          id: 'sandwich'\n        },\n        id: 'lines'\n      }],\n      borderRadius: 4,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]]\n      },\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'country',\n        legendPosition: 'middle',\n        legendOffset: 32\n      },\n      axisLeft: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'food',\n        legendPosition: 'middle',\n        legendOffset: -40\n      },\n      labelSkipWidth: 12,\n      labelSkipHeight: 12,\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['brighter', '1.4']]\n      },\n      legends: [{\n        dataFrom: 'keys',\n        anchor: 'bottom-right',\n        direction: 'column',\n        justify: false,\n        translateX: 120,\n        translateY: 0,\n        itemsSpacing: 2,\n        itemWidth: 100,\n        itemHeight: 20,\n        itemDirection: 'left-to-right',\n        itemOpacity: 0.85,\n        symbolSize: 20,\n        effects: [{\n          on: 'hover',\n          style: {\n            itemOpacity: 1\n          }\n        }]\n      }],\n      tooltip: function () {},\n      role: \"application\",\n      isFocusable: true,\n      ariaLabel: \"Nivo bar chart demo\",\n      barAriaLabel: function (e) {\n        return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["ResponsiveBar","datas","info","Barchart","data","top","right","bottom","left","type","round","scheme","id","background","color","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","e","formattedValue","indexValue"],"sources":["/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/barchart.jsx"],"sourcesContent":["import { ResponsiveBar } from '@nivo/bar'\nimport {datas as info} from './data'\n\n\n\nconst Barchart = (data = info) => {\n    return(\n        <div>\n            <ResponsiveBar\n        data={data}\n        keys={[\n            'hot dog',\n            'burger',\n            'sandwich',\n            'kebab',\n            'fries',\n            'donut'\n        ]}\n        indexBy=\"country\"\n        margin={{ top: 50, right: 200, bottom: 50, left: 60 }}\n        padding={0.55}\n        groupMode=\"grouped\"\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        valueFormat=\" >-\"\n        colors={{ scheme: 'nivo' }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderRadius={4}\n        borderColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    1.6\n                ]\n            ]\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'country',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'food',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'brighter',\n                    '1.4'\n                ]\n            ]\n        }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        tooltip={function(){}}\n        role=\"application\"\n        isFocusable={true}\n        ariaLabel=\"Nivo bar chart demo\"\n        barAriaLabel={function(e){return e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}}\n    />\n)\n        </div>\n    )\n}\n\n\nexport default Barchart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}