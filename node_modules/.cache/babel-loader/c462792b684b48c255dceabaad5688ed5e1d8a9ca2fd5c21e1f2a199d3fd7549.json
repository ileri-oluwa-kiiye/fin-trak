{"ast":null,"code":"import _slicedToArray from \"/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ActionTypes } from './useListbox.types';\nimport areArraysEqual from '../utils/areArraysEqual';\n\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n  return internalState;\n}\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n  return optionComparer(option1, option2);\n}\n\n/**\n * Triggers change event handlers (onChange and onHighlightChange) when reducer returns changed state.\n *\n * @param nextState The next state returned by the reducer.\n * @param internalPreviousState The previous state. If the component is controlled, this is merged with the props to determine the final state.\n * @param propsRef The props with defaults applied.\n * @param lastActionRef The last action that was dispatched.\n */\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {\n  React.useEffect(function () {\n    if (!propsRef.current || lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    if (lastActionRef.current.type === ActionTypes.setValue || lastActionRef.current.type === ActionTypes.setHighlight) {\n      // Don't fire change events when the value has been changed externally (e.g. by changing the controlled prop).\n      return;\n    }\n    var previousState = getControlledState(internalPreviousState, propsRef.current);\n    var _propsRef$current2 = propsRef.current,\n      multiple = _propsRef$current2.multiple,\n      optionComparer = _propsRef$current2.optionComparer;\n    if (multiple) {\n      var _previousState$select;\n      var previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      var nextSelectedValues = nextState.selectedValue;\n      var onChange = propsRef.current.onChange;\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);\n      }\n    } else {\n      var previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      var nextSelectedValue = nextState.selectedValue;\n      var _onChange = propsRef.current.onChange;\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        _onChange == null ? void 0 : _onChange(lastActionRef.current.event, nextSelectedValue);\n      }\n    }\n\n    // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);\n    }\n    lastActionRef.current = null;\n  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);\n}\n\n/**\n * @ignore - do not document.\n */\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n  var _props$current = props.current,\n    value = _props$current.value,\n    defaultValue = _props$current.defaultValue,\n    multiple = _props$current.multiple;\n  var actionRef = React.useRef(null);\n  var initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : multiple ? [] : null;\n  var initialState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  var combinedReducer = React.useCallback(function (state, action) {\n    actionRef.current = action;\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, action.props), action);\n    }\n    return internalReducer(getControlledState(state, action.props), action);\n  }, [externalReducer, internalReducer]);\n  var _React$useReducer = React.useReducer(combinedReducer, initialState),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    nextState = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  var dispatchWithProps = React.useCallback(function (action) {\n    dispatch(_extends({\n      props: props.current\n    }, action));\n  }, [dispatch, props]);\n  var previousState = React.useRef(initialState);\n  React.useEffect(function () {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, props, actionRef);\n  return [getControlledState(nextState, props.current), dispatchWithProps];\n}","map":{"version":3,"names":["_extends","React","ActionTypes","areArraysEqual","getControlledState","internalState","props","value","undefined","selectedValue","areOptionsEqual","option1","option2","optionComparer","useStateChangeDetection","nextState","internalPreviousState","propsRef","lastActionRef","useEffect","current","type","setValue","setHighlight","previousState","multiple","_previousState$select","previousSelectedValues","nextSelectedValues","onChange","event","previousSelectedValue","nextSelectedValue","highlightedValue","_propsRef$current","_propsRef$current$onH","onHighlightChange","call","useControllableReducer","internalReducer","externalReducer","_ref","defaultValue","actionRef","useRef","initialSelectedValue","initialState","combinedReducer","useCallback","state","action","useReducer","dispatch","dispatchWithProps"],"sources":["/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/node_modules/@mui/base/ListboxUnstyled/useControllableReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ActionTypes } from './useListbox.types';\nimport areArraysEqual from '../utils/areArraysEqual';\n\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n  return internalState;\n}\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n  return optionComparer(option1, option2);\n}\n\n/**\n * Triggers change event handlers (onChange and onHighlightChange) when reducer returns changed state.\n *\n * @param nextState The next state returned by the reducer.\n * @param internalPreviousState The previous state. If the component is controlled, this is merged with the props to determine the final state.\n * @param propsRef The props with defaults applied.\n * @param lastActionRef The last action that was dispatched.\n */\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {\n  React.useEffect(() => {\n    if (!propsRef.current || lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    if (lastActionRef.current.type === ActionTypes.setValue || lastActionRef.current.type === ActionTypes.setHighlight) {\n      // Don't fire change events when the value has been changed externally (e.g. by changing the controlled prop).\n      return;\n    }\n    const previousState = getControlledState(internalPreviousState, propsRef.current);\n    const {\n      multiple,\n      optionComparer\n    } = propsRef.current;\n    if (multiple) {\n      var _previousState$select;\n      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      const nextSelectedValues = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);\n      }\n    } else {\n      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      const nextSelectedValue = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValue);\n      }\n    }\n\n    // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);\n    }\n    lastActionRef.current = null;\n  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);\n}\n\n/**\n * @ignore - do not document.\n */\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n  const {\n    value,\n    defaultValue,\n    multiple\n  } = props.current;\n  const actionRef = React.useRef(null);\n  const initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : multiple ? [] : null;\n  const initialState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  const combinedReducer = React.useCallback((state, action) => {\n    actionRef.current = action;\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, action.props), action);\n    }\n    return internalReducer(getControlledState(state, action.props), action);\n  }, [externalReducer, internalReducer]);\n  const [nextState, dispatch] = React.useReducer(combinedReducer, initialState);\n  const dispatchWithProps = React.useCallback(action => {\n    dispatch(_extends({\n      props: props.current\n    }, action));\n  }, [dispatch, props]);\n  const previousState = React.useRef(initialState);\n  React.useEffect(() => {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, props, actionRef);\n  return [getControlledState(nextState, props.current), dispatchWithProps];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}