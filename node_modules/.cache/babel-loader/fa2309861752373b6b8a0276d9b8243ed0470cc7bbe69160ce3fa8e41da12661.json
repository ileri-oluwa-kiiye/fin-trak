{"ast":null,"code":"var _jsxFileName = \"/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/stepone.jsx\";\nimport { Button, Box, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stepone = () => {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    business: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    location: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const handleFormSubmit = values => {\n    console.log(values);\n  };\n  const userSchema = yup.object.shape({\n    firstName: yup.string().required(\"required\"),\n    lastName: yup.string().required(\"required\"),\n    business: yup.string().required(\"required\"),\n    email: yup.string().required(\"required\"),\n    phoneNumber: yup.string().required(\"required\"),\n    location: yup.string().required(\"required\"),\n    password: yup.string().required(\"required\"),\n    confirmPassword: yup.string().required(\"required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: handleFormSubmit,\n      initialValues: initialValues,\n      validationSchema: userSchema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n// const Stepone = () => {\n//     return(\n//         <div>\n//             <h1>Welcome to Fin-traka</h1>\n//             <p>Open your account</p>\n\n//             <form action=\"\">\n//                 <label>\n//                     First Name\n//                     <input type={Text} id=\"firstname\" name=\"firstname\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n\n//                 <label>\n//                     Business Name(optional)\n//                     <input type={Text} id=\"business\" name=\"business\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n//             </form>\n//         </div>\n//     )\n// }\n_c = Stepone;\nexport default Stepone;\nvar _c;\n$RefreshReg$(_c, \"Stepone\");","map":{"version":3,"names":["Button","Box","TextField","Formik","yup","Stepone","initialValues","firstName","lastName","business","email","phoneNumber","location","password","confirmPassword","handleFormSubmit","values","console","log","userSchema","object","shape","string","required"],"sources":["/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/stepone.jsx"],"sourcesContent":["import { Button, Box, TextField} from \"@mui/material\"\nimport { Formik } from \"formik\"\nimport * as yup from \"yup\"\n\n\n\nconst Stepone = () => {\n\n    const initialValues = {\n        firstName : \"\",\n        lastName : \"\",\n        business : \"\",\n        email : \"\",\n        phoneNumber : \"\",\n        location : \"\",\n        password : \"\",\n        confirmPassword : \"\",\n\n    }\n    const handleFormSubmit = (values) => {\n        console.log(values)\n    }\n\n    const userSchema = yup.object.shape({\n        firstName : yup.string().required(\"required\"),\n        lastName : yup.string().required(\"required\"),\n        business : yup.string().required(\"required\"),\n        email : yup.string().required(\"required\"),\n        phoneNumber : yup.string().required(\"required\"),\n        location : yup.string().required(\"required\"),\n        password : yup.string().required(\"required\"),\n        confirmPassword : yup.string().required(\"required\"),\n    })\n\n\n    return(\n        <div>\n            <Formik \n             onSubmit={handleFormSubmit}\n             initialValues ={initialValues}\n             validationSchema= {userSchema}\n             >\n\n             </Formik>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const Stepone = () => {\n//     return(\n//         <div>\n//             <h1>Welcome to Fin-traka</h1>\n//             <p>Open your account</p>\n\n//             <form action=\"\">\n//                 <label>\n//                     First Name\n//                     <input type={Text} id=\"firstname\" name=\"firstname\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n\n//                 <label>\n//                     Business Name(optional)\n//                     <input type={Text} id=\"business\" name=\"business\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n//             </form>\n//         </div>\n//     )\n// }\n\nexport default Stepone"],"mappings":";AAAA,SAASA,MAAM,EAAEC,GAAG,EAAEC,SAAS,QAAO,eAAe;AACrD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA;AAI1B,MAAMC,OAAO,GAAG,MAAM;EAElB,MAAMC,aAAa,GAAG;IAClBC,SAAS,EAAG,EAAE;IACdC,QAAQ,EAAG,EAAE;IACbC,QAAQ,EAAG,EAAE;IACbC,KAAK,EAAG,EAAE;IACVC,WAAW,EAAG,EAAE;IAChBC,QAAQ,EAAG,EAAE;IACbC,QAAQ,EAAG,EAAE;IACbC,eAAe,EAAG;EAEtB,CAAC;EACD,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACjCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACvB,CAAC;EAED,MAAMG,UAAU,GAAGf,GAAG,CAACgB,MAAM,CAACC,KAAK,CAAC;IAChCd,SAAS,EAAGH,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC7Cf,QAAQ,EAAGJ,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC5Cd,QAAQ,EAAGL,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC5Cb,KAAK,EAAGN,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IACzCZ,WAAW,EAAGP,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC/CX,QAAQ,EAAGR,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC5CV,QAAQ,EAAGT,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC5CT,eAAe,EAAGV,GAAG,CAACkB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;EACtD,CAAC,CAAC;EAGF,oBACI;IAAA,uBACI,QAAC,MAAM;MACN,QAAQ,EAAER,gBAAiB;MAC3B,aAAa,EAAGT,aAAc;MAC9B,gBAAgB,EAAGa;IAAW;MAAA;MAAA;MAAA;IAAA;EAGrB;IAAA;IAAA;IAAA;EAAA,QACR;AAEd,CAAC;;AAmBD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAxFMd,OAAO;AA0Fb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}