{"ast":null,"code":"var _jsxFileName = \"/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/stepone.jsx\";\nimport { Button, Box, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stepone = () => {\n  const phoneRegEsp = \"changethis ileri\";\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    business: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    location: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const handleFormSubmit = values => {\n    console.log(values);\n  };\n  const userSchema = yup.object.shape({\n    firstName: yup.string().required(\"required\"),\n    lastName: yup.string().required(\"required\"),\n    // business : yup.string().required(\"required\"),\n    email: yup.string().email(\"Invalid email\").required(\"required\"),\n    phoneNumber: yup.string().matches(phoneRegEsp, \"Phone Number Is Not Valid\").required(\"required\"),\n    location: yup.string().required(\"required\"),\n    password: yup.string().required(\"required\"),\n    confirmPassword: yup.string().required(\"required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: handleFormSubmit,\n      initialValues: initialValues,\n      validationSchema: userSchema,\n      children: _ref => {\n        let {\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          handleSubmit\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"grid\",\n            gap: \"30px\",\n            gridTemplateColumns: \"repeat(4, minmax(0, 1fr))\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"filled\",\n              type: \"text\",\n              label: \"First Name\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.firstName,\n              name: \"firstName\",\n              error: !!touched.firstName && !!errors.firstName,\n              helperText: touched.firstName && errors.firstName,\n              sx: {\n                gridColumn: \"span4 \"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"filled\",\n              type: \"text\",\n              label: \"Last Name\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.lastName,\n              name: \"lastName\",\n              error: !!touched.lastName && !!errors.lastName,\n              helperText: touched.lastName && errors.lastName,\n              sx: {\n                gridColumn: \"span4 \"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"filled\",\n              type: \"text\",\n              label: \"Business Name(optional)\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.business,\n              name: \"business\",\n              error: !!touched.business && !!errors.business,\n              helperText: touched.business && errors.business,\n              sx: {\n                gridColumn: \"span4 \"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"filled\",\n              type: \"text\",\n              label: \"E-mail address\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.email,\n              name: \"email\",\n              helperText: touched.email && errors.email,\n              sx: {\n                gridColumn: \"span4 \"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"filled\",\n              type: \"text\",\n              label: \"Phone number\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.phoneNumber,\n              name: \"phoneNumber\",\n              error: !!touched.phoneNumber && !!errors.phoneNumber,\n              helperText: touched.phoneNumber && errors.phoneNumber,\n              sx: {\n                gridColumn: \"span4 \"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n// const Stepone = () => {\n//     return(\n//         <div>\n//             <h1>Welcome to Fin-traka</h1>\n//             <p>Open your account</p>\n\n//             <form action=\"\">\n//                 <label>\n//                     First Name\n//                     <input type={Text} id=\"firstname\" name=\"firstname\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n\n//                 <label>\n//                     Business Name(optional)\n//                     <input type={Text} id=\"business\" name=\"business\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n//             </form>\n//         </div>\n//     )\n// }\n_c = Stepone;\nexport default Stepone;\nvar _c;\n$RefreshReg$(_c, \"Stepone\");","map":{"version":3,"names":["Button","Box","TextField","Formik","yup","Stepone","phoneRegEsp","initialValues","firstName","lastName","business","email","phoneNumber","location","password","confirmPassword","handleFormSubmit","values","console","log","userSchema","object","shape","string","required","matches","errors","touched","handleBlur","handleChange","handleSubmit","gridColumn"],"sources":["/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/stepone.jsx"],"sourcesContent":["import { Button, Box, TextField} from \"@mui/material\"\nimport { Formik } from \"formik\"\nimport * as yup from \"yup\"\n\n\n\nconst Stepone = () => {\n\n    const phoneRegEsp = \"changethis ileri\";\n\n    const initialValues = {\n        firstName : \"\",\n        lastName : \"\",\n        business : \"\",\n        email : \"\",\n        phoneNumber : \"\",\n        location : \"\",\n        password : \"\",\n        confirmPassword : \"\",\n\n    }\n    const handleFormSubmit = (values) => {\n        console.log(values)\n    }\n\n    const userSchema = yup.object.shape({\n        firstName : yup.string().required(\"required\"),\n        lastName : yup.string().required(\"required\"),\n        // business : yup.string().required(\"required\"),\n        email : yup.string().email(\"Invalid email\").required(\"required\"),\n        phoneNumber : yup.string().matches(phoneRegEsp, \"Phone Number Is Not Valid\").required(\"required\"),\n        location : yup.string().required(\"required\"),\n        password : yup.string().required(\"required\"),\n        confirmPassword : yup.string().required(\"required\"),\n    })\n\n    \n\n    return(\n        <div>\n            <Formik \n             onSubmit={handleFormSubmit}\n             initialValues ={initialValues}\n             validationSchema= {userSchema}\n             >\n                {({values, errors, touched, handleBlur, handleChange, handleSubmit})  => (\n                    <form onSubmit={handleSubmit}>\n                        <Box \n                         display=\"grid\"\n                         gap=\"30px\"\n                         gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n                        >\n                            <TextField\n                                fullWidth\n                                variant=\"filled\"\n                                type=\"text\"\n                                label= \"First Name\"\n                                onBlur={handleBlur}\n                                onChange = {handleChange}\n                                value= {values.firstName}\n                                name = \"firstName\"\n                                error = {!!touched.firstName && !!errors.firstName}\n                                helperText = {touched.firstName && errors.firstName}\n                                sx = {{ gridColumn : \"span4 \"}}\n                            />\n                            <TextField\n                                fullWidth\n                                variant=\"filled\"\n                                type=\"text\"\n                                label= \"Last Name\"\n                                onBlur={handleBlur}\n                                onChange = {handleChange}\n                                value= {values.lastName}\n                                name = \"lastName\"\n                                error = {!!touched.lastName && !!errors.lastName}\n                                helperText = {touched.lastName && errors.lastName}\n                                sx = {{ gridColumn : \"span4 \"}}\n                            />\n                            <TextField\n                                fullWidth\n                                variant=\"filled\"\n                                type=\"text\"\n                                label= \"Business Name(optional)\"\n                                onBlur={handleBlur}\n                                onChange = {handleChange}\n                                value= {values.business}\n                                name = \"business\"\n                                error = {!!touched.business && !!errors.business}\n                                helperText = {touched.business && errors.business}\n                                sx = {{ gridColumn : \"span4 \"}}\n                            />\n                            <TextField\n                                fullWidth\n                                variant=\"filled\"\n                                type=\"text\"\n                                label= \"E-mail address\"\n                                onBlur={handleBlur}\n                                onChange = {handleChange}\n                                value= {values.email}\n                                name = \"email\"\n                                helperText = {touched.email && errors.email}\n                                sx = {{ gridColumn : \"span4 \"}}\n                            />\n                            <TextField\n                                fullWidth\n                                variant=\"filled\"\n                                type=\"text\"\n                                label= \"Phone number\"\n                                onBlur={handleBlur}\n                                onChange = {handleChange}\n                                value= {values.phoneNumber}\n                                name = \"phoneNumber\"\n                                error = {!!touched.phoneNumber && !!errors.phoneNumber}\n                                helperText = {touched.phoneNumber && errors.phoneNumber}\n                                sx = {{ gridColumn : \"span4 \"}}\n                            />\n                        </Box>\n                    </form>\n                )}\n             </Formik>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const Stepone = () => {\n//     return(\n//         <div>\n//             <h1>Welcome to Fin-traka</h1>\n//             <p>Open your account</p>\n\n//             <form action=\"\">\n//                 <label>\n//                     First Name\n//                     <input type={Text} id=\"firstname\" name=\"firstname\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n\n//                 <label>\n//                     Business Name(optional)\n//                     <input type={Text} id=\"business\" name=\"business\" />\n//                 </label>\n\n//                 <label>\n//                     Last Name\n//                     <input type={Text} id=\"lastname\" name=\"lastname\" />\n//                 </label>\n//             </form>\n//         </div>\n//     )\n// }\n\nexport default Stepone"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}