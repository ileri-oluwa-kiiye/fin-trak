{"ast":null,"code":"var _jsxFileName = \"/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/barchart.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { ResponsiveBar } from '@nivo/bar'\n\n// // make sure parent container have a defined height when using\n// // responsive component, otherwise height will be 0 and\n// // no chart will be rendered.\n// // website examples showcase many properties,\n// // you'll often use just a few of them.\n\n// const data = [\n//     {\n//       \"day\": \"Mon\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(79, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(85, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Tue\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(118, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(192, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Wed\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(221, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(75, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Thur\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(193, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(110, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Fri\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(135, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(257, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Sat\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(5, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(349, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Sun\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(202, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(114, 70%, 50%)\",\n//     }\n//   ]\n\n// const Barchart = ({ data/* see data tab */ }) => {\n//     return(\n//         <div style={{height:\"1000px\"}}>\n//             <ResponsiveBar\n//                 data={data}\n//                 keys={[\n//                     'in',\n//                     'out'\n//                 ]}\n//                 indexBy=\"day\"\n//                 margin={{ top: 50, right: 200, bottom: 50, left: 60 }}\n//                 padding={0.55}\n//                 groupMode=\"grouped\"\n//                 valueScale={{ type: 'linear' }}\n//                 indexScale={{ type: 'band', round: true }}\n//                 valueFormat=\" >-\"\n//                 colors={{ scheme: 'nivo' }}\n//                 defs={[\n//                     {\n//                         id: 'dots',\n//                         type: 'patternDots',\n//                         background: 'inherit',\n//                         color: '#38bcb2',\n//                         size: 4,\n//                         padding: 1,\n//                         stagger: true\n//                     },\n//                     {\n//                         id: 'lines',\n//                         type: 'patternLines',\n//                         background: 'inherit',\n//                         color: '#eed312',\n//                         rotation: -45,\n//                         lineWidth: 6,\n//                         spacing: 10\n//                     }\n//                 ]}\n//                 fill={[\n//                     {\n//                         match: {\n//                             id: 'in'\n//                         },\n//                         id: 'dots'\n//                     },\n//                     {\n//                         match: {\n//                             id: 'out'\n//                         },\n//                         id: 'lines'\n//                     }\n//                 ]}\n//                 borderRadius={4}\n//                 borderColor={{\n//                     from: 'color',\n//                     modifiers: [\n//                         [\n//                             'darker',\n//                             1.6\n//                         ]\n//                     ]\n//                 }}\n//                 axisTop={null}\n//                 axisRight={null}\n//                 axisBottom={{\n//                     tickSize: 5,\n//                     tickPadding: 5,\n//                     tickRotation: 0,\n//                     legend: 'day',\n//                     legendPosition: 'middle',\n//                     legendOffset: 32\n//                 }}\n//                 axisLeft={{\n//                     tickSize: 5,\n//                     tickPadding: 5,\n//                     tickRotation: 0,\n//                     legend: 'food',\n//                     legendPosition: 'middle',\n//                     legendOffset: -40\n//                 }}\n//                 labelSkipWidth={12}\n//                 labelSkipHeight={12}\n//                 labelTextColor={{\n//                     from: 'color',\n//                     modifiers: [\n//                         [\n//                             'brighter',\n//                             '1.4'\n//                         ]\n//                     ]\n//                 }}\n//                 legends={[\n//                     {\n//                         dataFrom: 'keys',\n//                         anchor: 'bottom-right',\n//                         direction: 'column',\n//                         justify: false,\n//                         translateX: 120,\n//                         translateY: 0,\n//                         itemsSpacing: 2,\n//                         itemWidth: 100,\n//                         itemHeight: 20,\n//                         itemDirection: 'left-to-right',\n//                         itemOpacity: 0.85,\n//                         symbolSize: 20,\n//                         effects: [\n//                             {\n//                                 on: 'hover',\n//                                 style: {\n//                                     itemOpacity: 1\n//                                 }\n//                             }\n//                         ]\n//                     }\n//                 ]}\n//                 tooltip={function(){}}\n//                 role=\"application\"\n//                 isFocusable={true}\n//                 ariaLabel=\"Nivo bar chart demo\"\n//                 barAriaLabel={function(e){return e.id+\": \"+e.formattedValue+\" in day: \"+e.indexValue}}\n//             />\n//         </div>\n//     )\n// }\n\nconst Barchart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Bar Chart here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["Barchart"],"sources":["/Users/ilerioluwakiiye/Desktop/Dev/fin-trakaa/src/components/sections/barchart.jsx"],"sourcesContent":["// import { ResponsiveBar } from '@nivo/bar'\n\n// // make sure parent container have a defined height when using\n// // responsive component, otherwise height will be 0 and\n// // no chart will be rendered.\n// // website examples showcase many properties,\n// // you'll often use just a few of them.\n\n\n// const data = [\n//     {\n//       \"day\": \"Mon\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(79, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(85, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Tue\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(118, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(192, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Wed\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(221, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(75, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Thur\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(193, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(110, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Fri\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(135, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(257, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Sat\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(5, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(349, 70%, 50%)\",\n//     },\n//     {\n//       \"day\": \"Sun\",\n//       \"in\": 80,\n//       \"inColor\": \"hsl(202, 70%, 50%)\",\n//       \"out\": 30,\n//       \"outColor\": \"hsl(114, 70%, 50%)\",\n//     }\n//   ]\n\n\n\n// const Barchart = ({ data/* see data tab */ }) => {\n//     return(\n//         <div style={{height:\"1000px\"}}>\n//             <ResponsiveBar\n//                 data={data}\n//                 keys={[\n//                     'in',\n//                     'out'\n//                 ]}\n//                 indexBy=\"day\"\n//                 margin={{ top: 50, right: 200, bottom: 50, left: 60 }}\n//                 padding={0.55}\n//                 groupMode=\"grouped\"\n//                 valueScale={{ type: 'linear' }}\n//                 indexScale={{ type: 'band', round: true }}\n//                 valueFormat=\" >-\"\n//                 colors={{ scheme: 'nivo' }}\n//                 defs={[\n//                     {\n//                         id: 'dots',\n//                         type: 'patternDots',\n//                         background: 'inherit',\n//                         color: '#38bcb2',\n//                         size: 4,\n//                         padding: 1,\n//                         stagger: true\n//                     },\n//                     {\n//                         id: 'lines',\n//                         type: 'patternLines',\n//                         background: 'inherit',\n//                         color: '#eed312',\n//                         rotation: -45,\n//                         lineWidth: 6,\n//                         spacing: 10\n//                     }\n//                 ]}\n//                 fill={[\n//                     {\n//                         match: {\n//                             id: 'in'\n//                         },\n//                         id: 'dots'\n//                     },\n//                     {\n//                         match: {\n//                             id: 'out'\n//                         },\n//                         id: 'lines'\n//                     }\n//                 ]}\n//                 borderRadius={4}\n//                 borderColor={{\n//                     from: 'color',\n//                     modifiers: [\n//                         [\n//                             'darker',\n//                             1.6\n//                         ]\n//                     ]\n//                 }}\n//                 axisTop={null}\n//                 axisRight={null}\n//                 axisBottom={{\n//                     tickSize: 5,\n//                     tickPadding: 5,\n//                     tickRotation: 0,\n//                     legend: 'day',\n//                     legendPosition: 'middle',\n//                     legendOffset: 32\n//                 }}\n//                 axisLeft={{\n//                     tickSize: 5,\n//                     tickPadding: 5,\n//                     tickRotation: 0,\n//                     legend: 'food',\n//                     legendPosition: 'middle',\n//                     legendOffset: -40\n//                 }}\n//                 labelSkipWidth={12}\n//                 labelSkipHeight={12}\n//                 labelTextColor={{\n//                     from: 'color',\n//                     modifiers: [\n//                         [\n//                             'brighter',\n//                             '1.4'\n//                         ]\n//                     ]\n//                 }}\n//                 legends={[\n//                     {\n//                         dataFrom: 'keys',\n//                         anchor: 'bottom-right',\n//                         direction: 'column',\n//                         justify: false,\n//                         translateX: 120,\n//                         translateY: 0,\n//                         itemsSpacing: 2,\n//                         itemWidth: 100,\n//                         itemHeight: 20,\n//                         itemDirection: 'left-to-right',\n//                         itemOpacity: 0.85,\n//                         symbolSize: 20,\n//                         effects: [\n//                             {\n//                                 on: 'hover',\n//                                 style: {\n//                                     itemOpacity: 1\n//                                 }\n//                             }\n//                         ]\n//                     }\n//                 ]}\n//                 tooltip={function(){}}\n//                 role=\"application\"\n//                 isFocusable={true}\n//                 ariaLabel=\"Nivo bar chart demo\"\n//                 barAriaLabel={function(e){return e.id+\": \"+e.formattedValue+\" in day: \"+e.indexValue}}\n//             />\n//         </div>\n//     )\n// }\n\n\n\nconst Barchart = () => {\n    return(\n        <div>\n            Bar Chart here\n        </div>\n    )\n}\n\n\nexport default Barchart"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMA,QAAQ,GAAG,MAAM;EACnB,oBACI;IAAA,UAAK;EAEL;IAAA;IAAA;IAAA;EAAA,QAAM;AAEd,CAAC;AAAA,KANKA,QAAQ;AASd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}